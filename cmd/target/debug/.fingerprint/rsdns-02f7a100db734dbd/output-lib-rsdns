{"message":"unused import: `std::vec`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/elements/name_server/zones/zone.rs","byte_start":35,"byte_end":43,"line_start":2,"line_end":2,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"use std::vec;","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/elements/name_server/zones/zone.rs","byte_start":31,"byte_end":44,"line_start":2,"line_end":2,"column_start":1,"column_end":14,"is_primary":true,"text":[{"text":"use std::vec;","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::vec`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/elements/name_server/zones/zone.rs:2:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::vec;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused import: `crate::dns::ResourceRecord`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/elements/name_server/zones/zone.rs","byte_start":181,"byte_end":207,"line_start":9,"line_end":9,"column_start":5,"column_end":31,"is_primary":true,"text":[{"text":"use crate::dns::ResourceRecord;","highlight_start":5,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/elements/name_server/zones/zone.rs","byte_start":177,"byte_end":208,"line_start":9,"line_end":9,"column_start":1,"column_end":32,"is_primary":true,"text":[{"text":"use crate::dns::ResourceRecord;","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::dns::ResourceRecord`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/elements/name_server/zones/zone.rs:9:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::dns::ResourceRecord;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unreachable expression","code":{"code":"unreachable_code","explanation":null},"level":"warning","spans":[{"file_name":"/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/dns/dns.rs","byte_start":1338,"byte_end":1342,"line_start":56,"line_end":56,"column_start":22,"column_end":26,"is_primary":true,"text":[{"text":"            answers: None,","highlight_start":22,"highlight_end":26}],"label":"unreachable expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/private/tmp/rust-20231120-5415-gdoyhv/rustc-1.74.0-src/library/core/src/macros/mod.rs","byte_start":28421,"byte_end":28468,"line_start":859,"line_end":859,"column_start":9,"column_end":56,"is_primary":false,"text":[],"label":"any code following this expression is unreachable","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/dns/dns.rs","byte_start":1308,"byte_end":1315,"line_start":55,"line_end":55,"column_start":19,"column_end":26,"is_primary":false,"text":[{"text":"            ques: todo!(),","highlight_start":19,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"todo!","def_site_span":{"file_name":"/private/tmp/rust-20231120-5415-gdoyhv/rustc-1.74.0-src/library/core/src/macros/mod.rs","byte_start":28381,"byte_end":28398,"line_start":857,"line_end":857,"column_start":1,"column_end":18,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"`#[warn(unreachable_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable expression\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/dns/dns.rs:56:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            ques: todo!(),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12many code following this expression is unreachable\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            answers: None,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munreachable expression\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unreachable_code)]` on by default\u001b[0m\n\n"}
{"message":"unused variable: `dns`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/dns/dns.rs","byte_start":1153,"byte_end":1156,"line_start":51,"line_end":51,"column_start":17,"column_end":20,"is_primary":true,"text":[{"text":"        let mut dns = Self {","highlight_start":17,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/dns/dns.rs","byte_start":1153,"byte_end":1156,"line_start":51,"line_end":51,"column_start":17,"column_end":20,"is_primary":true,"text":[{"text":"        let mut dns = Self {","highlight_start":17,"highlight_end":20}],"label":null,"suggested_replacement":"_dns","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `dns`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/dns/dns.rs:51:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut dns = Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_dns`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"message":"unused variable: `filename`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/elements/name_server/zones/master_file.rs","byte_start":689,"byte_end":697,"line_start":32,"line_end":32,"column_start":22,"column_end":30,"is_primary":true,"text":[{"text":"    fn decode(&self, filename: &str) -> Result<Vec<ResourceRecord>, Error> {","highlight_start":22,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/elements/name_server/zones/master_file.rs","byte_start":689,"byte_end":697,"line_start":32,"line_end":32,"column_start":22,"column_end":30,"is_primary":true,"text":[{"text":"    fn decode(&self, filename: &str) -> Result<Vec<ResourceRecord>, Error> {","highlight_start":22,"highlight_end":30}],"label":null,"suggested_replacement":"_filename","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `filename`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/elements/name_server/zones/master_file.rs:32:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn decode(&self, filename: &str) -> Result<Vec<ResourceRecord>, Error> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_filename`\u001b[0m\n\n"}
{"message":"unused variable: `rrs`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/elements/name_server/zones/master_file.rs","byte_start":789,"byte_end":792,"line_start":36,"line_end":36,"column_start":22,"column_end":25,"is_primary":true,"text":[{"text":"    fn encode(&self, rrs: Vec<Rc<RefCell<ResourceRecord>>>, filename: &str) -> Result<(), Error> {","highlight_start":22,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/elements/name_server/zones/master_file.rs","byte_start":789,"byte_end":792,"line_start":36,"line_end":36,"column_start":22,"column_end":25,"is_primary":true,"text":[{"text":"    fn encode(&self, rrs: Vec<Rc<RefCell<ResourceRecord>>>, filename: &str) -> Result<(), Error> {","highlight_start":22,"highlight_end":25}],"label":null,"suggested_replacement":"_rrs","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `rrs`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/elements/name_server/zones/master_file.rs:36:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn encode(&self, rrs: Vec<Rc<RefCell<ResourceRecord>>>, filename: &str) -> Result<(), Error> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_rrs`\u001b[0m\n\n"}
{"message":"unused variable: `filename`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/elements/name_server/zones/master_file.rs","byte_start":828,"byte_end":836,"line_start":36,"line_end":36,"column_start":61,"column_end":69,"is_primary":true,"text":[{"text":"    fn encode(&self, rrs: Vec<Rc<RefCell<ResourceRecord>>>, filename: &str) -> Result<(), Error> {","highlight_start":61,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/elements/name_server/zones/master_file.rs","byte_start":828,"byte_end":836,"line_start":36,"line_end":36,"column_start":61,"column_end":69,"is_primary":true,"text":[{"text":"    fn encode(&self, rrs: Vec<Rc<RefCell<ResourceRecord>>>, filename: &str) -> Result<(), Error> {","highlight_start":61,"highlight_end":69}],"label":null,"suggested_replacement":"_filename","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `filename`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/elements/name_server/zones/master_file.rs:36:61\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn encode(&self, rrs: Vec<Rc<RefCell<ResourceRecord>>>, filename: &str) -> Result<(), Error> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_filename`\u001b[0m\n\n"}
{"message":"field `raw` is never read","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/dns/dns.rs","byte_start":533,"byte_end":536,"line_start":24,"line_end":24,"column_start":12,"column_end":15,"is_primary":false,"text":[{"text":"pub struct DNS {","highlight_start":12,"highlight_end":15}],"label":"field in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/dns/dns.rs","byte_start":543,"byte_end":546,"line_start":25,"line_end":25,"column_start":5,"column_end":8,"is_primary":true,"text":[{"text":"    raw: Vec<u8>,","highlight_start":5,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`DNS` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: field `raw` is never read\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/dns/dns.rs:25:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct DNS {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfield in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    raw: Vec<u8>,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `DNS` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}
{"message":"struct `NameServer` is never constructed","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/elements/name_server/server.rs","byte_start":321,"byte_end":331,"line_start":13,"line_end":13,"column_start":8,"column_end":18,"is_primary":true,"text":[{"text":"struct NameServer {","highlight_start":8,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: struct `NameServer` is never constructed\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/elements/name_server/server.rs:13:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mstruct NameServer {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\n"}
{"message":"methods `find` and `find_cycle` are never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/elements/name_server/server.rs","byte_start":459,"byte_end":474,"line_start":19,"line_end":19,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"impl NameServer {","highlight_start":1,"highlight_end":16}],"label":"methods in this implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/elements/name_server/server.rs","byte_start":488,"byte_end":492,"line_start":20,"line_end":20,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"    pub fn find(&self, domain: &str, r: bool) -> Option<Rc<RefCell<ResourceRecord>>> {","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/elements/name_server/server.rs","byte_start":624,"byte_end":634,"line_start":24,"line_end":24,"column_start":8,"column_end":18,"is_primary":true,"text":[{"text":"    fn find_cycle(","highlight_start":8,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: methods `find` and `find_cycle` are never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/elements/name_server/server.rs:20:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl NameServer {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmethods in this implementation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn find(&self, domain: &str, r: bool) -> Option<Rc<RefCell<ResourceRecord>>> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn find_cycle(\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\n"}
{"message":"fields `owner`, `leaves`, and `rr` are never read","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/elements/name_server/zones/domain_tree.rs","byte_start":5147,"byte_end":5157,"line_start":107,"line_end":107,"column_start":12,"column_end":22,"is_primary":false,"text":[{"text":"pub struct DomainTree {","highlight_start":12,"highlight_end":22}],"label":"fields in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/elements/name_server/zones/domain_tree.rs","byte_start":5164,"byte_end":5169,"line_start":108,"line_end":108,"column_start":5,"column_end":10,"is_primary":true,"text":[{"text":"    owner: String,","highlight_start":5,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/elements/name_server/zones/domain_tree.rs","byte_start":5183,"byte_end":5189,"line_start":109,"line_end":109,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    leaves: Vec<Rc<RefCell<DomainTree>>>,","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/elements/name_server/zones/domain_tree.rs","byte_start":5225,"byte_end":5227,"line_start":110,"line_end":110,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    rr: Option<Rc<RefCell<ResourceRecord>>>,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`DomainTree` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: fields `owner`, `leaves`, and `rr` are never read\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/elements/name_server/zones/domain_tree.rs:108:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m107\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct DomainTree {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfields in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    owner: String,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    leaves: Vec<Rc<RefCell<DomainTree>>>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m110\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    rr: Option<Rc<RefCell<ResourceRecord>>>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `DomainTree` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\u001b[0m\n\n"}
{"message":"associated items `new`, `push`, `set_rr`, and `get_rr` are never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/elements/name_server/zones/domain_tree.rs","byte_start":5269,"byte_end":5284,"line_start":113,"line_end":113,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"impl DomainTree {","highlight_start":1,"highlight_end":16}],"label":"associated items in this implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/elements/name_server/zones/domain_tree.rs","byte_start":5298,"byte_end":5301,"line_start":114,"line_end":114,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn new() -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/elements/name_server/zones/domain_tree.rs","byte_start":5443,"byte_end":5447,"line_start":122,"line_end":122,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"    pub fn push(&mut self, domain: &str) {","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/elements/name_server/zones/domain_tree.rs","byte_start":7190,"byte_end":7196,"line_start":172,"line_end":172,"column_start":12,"column_end":18,"is_primary":true,"text":[{"text":"    pub fn set_rr(&mut self, domain: &str, rr: Rc<RefCell<ResourceRecord>>) {","highlight_start":12,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/elements/name_server/zones/domain_tree.rs","byte_start":8625,"byte_end":8631,"line_start":217,"line_end":217,"column_start":12,"column_end":18,"is_primary":true,"text":[{"text":"    pub fn get_rr(&self, domain: &str) -> Option<Rc<RefCell<ResourceRecord>>> {","highlight_start":12,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated items `new`, `push`, `set_rr`, and `get_rr` are never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/elements/name_server/zones/domain_tree.rs:114:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl DomainTree {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12massociated items in this implementation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m114\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new() -> Self {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m122\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn push(&mut self, domain: &str) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m172\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn set_rr(&mut self, domain: &str, rr: Rc<RefCell<ResourceRecord>>) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m217\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn get_rr(&self, domain: &str) -> Option<Rc<RefCell<ResourceRecord>>> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"message":"associated function `new` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/elements/name_server/zones/master_file.rs","byte_start":512,"byte_end":520,"line_start":21,"line_end":21,"column_start":1,"column_end":9,"is_primary":false,"text":[{"text":"impl DMF {","highlight_start":1,"highlight_end":9}],"label":"associated function in this implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/elements/name_server/zones/master_file.rs","byte_start":534,"byte_end":537,"line_start":22,"line_end":22,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn new() -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated function `new` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/elements/name_server/zones/master_file.rs:22:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl DMF {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12massociated function in this implementation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new() -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"message":"struct `Zones` is never constructed","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/elements/name_server/zones/zone.rs","byte_start":362,"byte_end":367,"line_start":21,"line_end":21,"column_start":8,"column_end":13,"is_primary":true,"text":[{"text":"struct Zones {","highlight_start":8,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: struct `Zones` is never constructed\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/elements/name_server/zones/zone.rs:21:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mstruct Zones {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"}
{"message":"associated items `new`, `set_coder`, and `parse_zone` are never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/elements/name_server/zones/zone.rs","byte_start":465,"byte_end":475,"line_start":26,"line_end":26,"column_start":1,"column_end":11,"is_primary":false,"text":[{"text":"impl Zones {","highlight_start":1,"highlight_end":11}],"label":"associated items in this implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/elements/name_server/zones/zone.rs","byte_start":489,"byte_end":492,"line_start":27,"line_end":27,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn new() -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/elements/name_server/zones/zone.rs","byte_start":626,"byte_end":635,"line_start":34,"line_end":34,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"    pub fn set_coder(&mut self, coder: Box<dyn MasterFileCoder>) {","highlight_start":12,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/elements/name_server/zones/zone.rs","byte_start":728,"byte_end":738,"line_start":38,"line_end":38,"column_start":12,"column_end":22,"is_primary":true,"text":[{"text":"    pub fn parse_zone(&mut self) -> Result<(), Error> {","highlight_start":12,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated items `new`, `set_coder`, and `parse_zone` are never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/jerad.k/code/rust/github.com/youngbloood/rsdns/src/elements/name_server/zones/zone.rs:27:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl Zones {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12massociated items in this implementation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new() -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn set_coder(&mut self, coder: Box<dyn MasterFileCoder>) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn parse_zone(&mut self) -> Result<(), Error> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\n"}
{"message":"15 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 15 warnings emitted\u001b[0m\n\n"}
